/*
 * EntryViewListConvert.java
 * Created on 2013/06/28
 *
 * Copyright (C) 2011-2013 Nippon Telegraph and Telephone Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package tubame.knowhow.plugin.logic.convert;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import tubame.knowhow.biz.model.generated.knowhow.ChildEntry;
import tubame.knowhow.biz.model.generated.knowhow.EntryCategory;
import tubame.knowhow.biz.model.generated.knowhow.PortabilityKnowhow.EntryViewList;

import tubame.knowhow.plugin.model.view.PortabilityKnowhowListViewOperation;

/**
 * Converted know-how entry information to the know-how XML data.<br/>
 * Convert know-how information generated by the know-how entry view to know-how
 * XML data.<br/>
 * JDK7<br/>
 */
public class EntryViewListConvert {
    /** Logger */
    private static final Logger LOGGER = LoggerFactory
            .getLogger(EntryViewListConvert.class);

    /**
     * Converted to the know-how XML data.<br/>
     * Convert the know-how XML data from the know-how entry information.<br/>
     * 
     * @param inputKnowhowEntry
     *            Know-how entry information
     * @return Entry list view
     */
    public EntryViewList convert(
            List<PortabilityKnowhowListViewOperation> inputKnowhowEntry) {
        EntryViewListConvert.LOGGER.debug("[inputKnowhowEntry]"
                + inputKnowhowEntry);

        EntryViewList entryViewList = new EntryViewList();
        for (PortabilityKnowhowListViewOperation knowhowListViewOperation : inputKnowhowEntry) {
            EntryCategory entryCategory = new EntryCategory();
            entryCategory.setEntryCategoryRefKey(knowhowListViewOperation
                    .getKnowhowViewType().getRegisterKey());
            convertEntryCategory(knowhowListViewOperation,
                    entryCategory.getChildEntries());
            entryViewList.getEntryCategories().add(entryCategory);
        }
        return entryViewList;
    }

    /**
     * Converted the know-how XML data to entry information of the child
     * hierarchy.<br/>
     * Converts category information registered to know-how XML data.<br/>
     * 
     * @param knowhowListViewOperation
     *            Know-how entry
     * @param childEntries
     *            Child hierarchy entry
     */
    private void convertEntryCategory(
            PortabilityKnowhowListViewOperation knowhowListViewOperation,
            List<ChildEntry> childEntries) {

        for (PortabilityKnowhowListViewOperation childKnowhowOperation : knowhowListViewOperation
                .getChildList()) {
            if (childKnowhowOperation.isCategory()) {
                ChildEntry childEntry = new ChildEntry();
                childEntry.setEntryCategoryRefKey(childKnowhowOperation
                        .getKnowhowViewType().getRegisterKey());
                this.convertEntryCategory(childKnowhowOperation,
                        childEntry.getChildEntries());
                childEntries.add(childEntry);
            }
        }
    }
}
