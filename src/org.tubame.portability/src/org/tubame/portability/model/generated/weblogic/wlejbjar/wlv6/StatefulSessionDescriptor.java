//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.04.17 at 10:51:36 AM JST 
//

package org.tubame.portability.model.generated.weblogic.wlejbjar.wlv6;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = { "statefulSessionCache", "lifecycle",
        "persistentStoreDir", "statefulSessionClustering",
        "allowConcurrentCalls", "allowRemoveDuringTransaction" })
@XmlRootElement(name = "stateful-session-descriptor")
public class StatefulSessionDescriptor {

    @XmlElement(name = "stateful-session-cache")
    protected StatefulSessionCache statefulSessionCache;
    protected Lifecycle lifecycle;
    @XmlElement(name = "persistent-store-dir")
    protected String persistentStoreDir;
    @XmlElement(name = "stateful-session-clustering")
    protected StatefulSessionClustering statefulSessionClustering;
    @XmlElement(name = "allow-concurrent-calls")
    protected String allowConcurrentCalls;
    @XmlElement(name = "allow-remove-during-transaction")
    protected String allowRemoveDuringTransaction;

    /**
     * Gets the value of the statefulSessionCache property.
     * 
     * @return possible object is {@link StatefulSessionCache }
     * 
     */
    public StatefulSessionCache getStatefulSessionCache() {
        return statefulSessionCache;
    }

    /**
     * Sets the value of the statefulSessionCache property.
     * 
     * @param value
     *            allowed object is {@link StatefulSessionCache }
     * 
     */
    public void setStatefulSessionCache(StatefulSessionCache value) {
        this.statefulSessionCache = value;
    }

    /**
     * Gets the value of the lifecycle property.
     * 
     * @return possible object is {@link Lifecycle }
     * 
     */
    public Lifecycle getLifecycle() {
        return lifecycle;
    }

    /**
     * Sets the value of the lifecycle property.
     * 
     * @param value
     *            allowed object is {@link Lifecycle }
     * 
     */
    public void setLifecycle(Lifecycle value) {
        this.lifecycle = value;
    }

    /**
     * Gets the value of the persistentStoreDir property.
     * 
     * @return possible object is {@link String }
     * 
     */
    public String getPersistentStoreDir() {
        return persistentStoreDir;
    }

    /**
     * Sets the value of the persistentStoreDir property.
     * 
     * @param value
     *            allowed object is {@link String }
     * 
     */
    public void setPersistentStoreDir(String value) {
        this.persistentStoreDir = value;
    }

    /**
     * Gets the value of the statefulSessionClustering property.
     * 
     * @return possible object is {@link StatefulSessionClustering }
     * 
     */
    public StatefulSessionClustering getStatefulSessionClustering() {
        return statefulSessionClustering;
    }

    /**
     * Sets the value of the statefulSessionClustering property.
     * 
     * @param value
     *            allowed object is {@link StatefulSessionClustering }
     * 
     */
    public void setStatefulSessionClustering(StatefulSessionClustering value) {
        this.statefulSessionClustering = value;
    }

    /**
     * Gets the value of the allowConcurrentCalls property.
     * 
     * @return possible object is {@link String }
     * 
     */
    public String getAllowConcurrentCalls() {
        return allowConcurrentCalls;
    }

    /**
     * Sets the value of the allowConcurrentCalls property.
     * 
     * @param value
     *            allowed object is {@link String }
     * 
     */
    public void setAllowConcurrentCalls(String value) {
        this.allowConcurrentCalls = value;
    }

    /**
     * Gets the value of the allowRemoveDuringTransaction property.
     * 
     * @return possible object is {@link String }
     * 
     */
    public String getAllowRemoveDuringTransaction() {
        return allowRemoveDuringTransaction;
    }

    /**
     * Sets the value of the allowRemoveDuringTransaction property.
     * 
     * @param value
     *            allowed object is {@link String }
     * 
     */
    public void setAllowRemoveDuringTransaction(String value) {
        this.allowRemoveDuringTransaction = value;
    }

}
