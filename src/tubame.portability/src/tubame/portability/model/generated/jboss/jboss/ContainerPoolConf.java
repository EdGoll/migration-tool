//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.04.17 at 10:51:38 AM JST 
//

package tubame.portability.model.generated.jboss.jboss;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = { "minimumSizeOrMaximumSizeOrStrictMaximumSizeOrStrictTimeoutOrSynchronized" })
@XmlRootElement(name = "container-pool-conf")
public class ContainerPoolConf {

    @XmlElements({
            @XmlElement(name = "MinimumSize", type = MinimumSize.class),
            @XmlElement(name = "MaximumSize", type = MaximumSize.class),
            @XmlElement(name = "strictMaximumSize", type = StrictMaximumSize.class),
            @XmlElement(name = "strictTimeout", type = StrictTimeout.class),
            @XmlElement(name = "Synchronized", type = Synchronized.class) })
    protected List<Object> minimumSizeOrMaximumSizeOrStrictMaximumSizeOrStrictTimeoutOrSynchronized;

    /**
     * Gets the value of the
     * minimumSizeOrMaximumSizeOrStrictMaximumSizeOrStrictTimeoutOrSynchronized
     * property.
     * 
     * <p>
     * This accessor method returns a reference to the live list, not a
     * snapshot. Therefore any modification you make to the returned list will
     * be present inside the JAXB object. This is why there is not a
     * <CODE>set</CODE> method for the
     * minimumSizeOrMaximumSizeOrStrictMaximumSizeOrStrictTimeoutOrSynchronized
     * property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * 
     * <pre>
     * getMinimumSizeOrMaximumSizeOrStrictMaximumSizeOrStrictTimeoutOrSynchronized()
     *         .add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link MinimumSize } {@link MaximumSize } {@link StrictMaximumSize }
     * {@link StrictTimeout } {@link Synchronized }
     * 
     * 
     */
    public List<Object> getMinimumSizeOrMaximumSizeOrStrictMaximumSizeOrStrictTimeoutOrSynchronized() {
        if (minimumSizeOrMaximumSizeOrStrictMaximumSizeOrStrictTimeoutOrSynchronized == null) {
            minimumSizeOrMaximumSizeOrStrictMaximumSizeOrStrictTimeoutOrSynchronized = new ArrayList<Object>();
        }
        return this.minimumSizeOrMaximumSizeOrStrictMaximumSizeOrStrictTimeoutOrSynchronized;
    }

}
